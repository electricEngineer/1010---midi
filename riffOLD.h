#ifndef RIFF_H
#define RIFF_H
#include "itrip.h"

/*

#define TWO_SECS		225
#define BPM160			6

#define RIFF_T volatile byte code
								
#define VOLCANO_SIZE	((16) *2)
#define VOLCANO_TOP		48
#define VOLCANO_SPEED	4
RIFF_T volcano1[VOLCANO_SIZE] = {	    //redo
		VOLCANO_TOP/8, VOLCANO_SPEED,
	VOLCANO_TOP/8 + 3, VOLCANO_SPEED,
	VOLCANO_TOP/8 - 2, VOLCANO_SPEED,
	VOLCANO_TOP/8 + 6, VOLCANO_SPEED,
		VOLCANO_TOP/4, VOLCANO_SPEED,
	VOLCANO_TOP/4 + 3, VOLCANO_SPEED,
	VOLCANO_TOP/4 - 2, VOLCANO_SPEED,
	VOLCANO_TOP/4 + 6, VOLCANO_SPEED,
		VOLCANO_TOP/2, VOLCANO_SPEED,
	VOLCANO_TOP/2 + 3, VOLCANO_SPEED,
	VOLCANO_TOP/2 - 2, VOLCANO_SPEED,
	VOLCANO_TOP/2 + 6, VOLCANO_SPEED,
		VOLCANO_TOP, VOLCANO_SPEED,
	VOLCANO_TOP + 3, VOLCANO_SPEED,
	VOLCANO_TOP - 2, VOLCANO_SPEED,
	VOLCANO_TOP + 6, VOLCANO_SPEED	
};


#define SAUCER_SIZE		((45-39) *2)
#define SAUCER_TOP		80
#define SAUCER_SPEED	21
RIFF_T saucer1[SAUCER_SIZE] = {
		SAUCER_TOP, SAUCER_SPEED,
		SAUCER_TOP - 6, SAUCER_SPEED,
	SAUCER_TOP - 1, SAUCER_SPEED,
		SAUCER_TOP - 7, SAUCER_SPEED,
	SAUCER_TOP - 2, SAUCER_SPEED,
	AUD_OFF, SAUCER_SPEED*3
};

#define HEAVY_11_PITCH	(20+14)//A
#define HEAVY_11_SPEED	72
#define HEAVY_11_SIZE	((141-53)*2)

RIFF_T heavy111[HEAVY_11_SIZE] = {
		HEAVY_11_PITCH, HEAVY_11_SPEED/4 - 8,		//1
	AUD_OFF, 8,
	HEAVY_11_PITCH, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,	//2
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 3, HEAVY_11_SPEED/4 - 8,	//3
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 3, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 3, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 3, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH, HEAVY_11_SPEED/4 - 8,	   	//4
	AUD_OFF, 8,
	HEAVY_11_PITCH, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,	//5
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 4, HEAVY_11_SPEED/4 - 8,	//6
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 4, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 4, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 4, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,	//7
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//8
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//9
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,	//10
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,	//11
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8
};

RIFF_T heavy112[HEAVY_11_SIZE] = {
		HEAVY_11_PITCH - 7, HEAVY_11_SPEED/4 - 8,		//1
	AUD_OFF, 8,
	HEAVY_11_PITCH - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,	//2
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,	//3
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH - 7, HEAVY_11_SPEED/4 - 8,	   	//4
	AUD_OFF, 8,
	HEAVY_11_PITCH - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,	//5
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,	//6
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,	//7
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 9, HEAVY_11_SPEED/4 - 8,	//8
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 9, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 9, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 9, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 12, HEAVY_11_SPEED/4 - 8,	//9
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 12, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 12, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 12, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 9, HEAVY_11_SPEED/4 - 8,	//10
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 12, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 12, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 12, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 9, HEAVY_11_SPEED/4 - 8,	//11
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 9, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 9, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 9, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8
};

#define HEAVY_12_SIZE	((411 - 235)*2)
RIFF_T heavy121[HEAVY_12_SIZE] = {
		HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,	//1 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,	//2 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
			HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//3 E
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,			
		HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,	//4 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,	//4 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,	//5 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//6 E
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
			HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//7 E
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,	//8 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,	//4 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,	//9 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//10 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
			HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,	//11 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,	//12 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,	//4 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 10, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,	//9 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 7, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//10 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
			HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,	//11 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,	//12 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,	//12 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
			HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,	//12 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,	//12 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  + 2, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8
};

RIFF_T heavy122[HEAVY_12_SIZE] = {
		HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,	//1 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,	//2 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
			HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,	//3 E
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,	//4 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,	//4 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,	//5 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,	//6 E
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
			HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,	//7 E
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,	//8 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,	//4 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,	//9 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,	//10 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
			HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,	//11 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,	//12 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,	//4 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 17, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,	//5 D
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 11, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,	//6 E
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 8, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,	//8 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 6, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//12 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//4 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//12 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
		HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,	//4 A
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8,
	HEAVY_11_PITCH  - 5, HEAVY_11_SPEED/4 - 8,
	AUD_OFF, 8
};

#define DRIVE_BACK_PITCH	20+12//G
#define DRIVE_BACK_SPEED	188 //?
#define DRIVE_BACK_PEDAL	12

#define DRIVE_BACK_0SIZE 4
RIFF_T driveBack0[DRIVE_BACK_0SIZE] = {
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
		DRIVE_BACK_PEDAL + 1, DRIVE_BACK_SPEED/4	 //actually down beat...	
};

#define DRIVE_BACK_1SIZE   ((51-19)*2)
RIFF_T driveBack1[DRIVE_BACK_1SIZE] = {
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
		DRIVE_BACK_PITCH, DRIVE_BACK_SPEED/4,	 //actually down beat...
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
		DRIVE_BACK_PITCH - 1, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH - 1, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH - 1, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH - 1, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4, 
		DRIVE_BACK_PITCH + 1, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH + 1, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH + 1, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH + 1, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
		DRIVE_BACK_PITCH, DRIVE_BACK_SPEED/4,	 //4
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
	DRIVE_BACK_PITCH, DRIVE_BACK_SPEED/4
};

#define DRIVE_BACK_2SIZE	4
RIFF_T driveBack2[DRIVE_BACK_2SIZE] = {
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
		DRIVE_BACK_PITCH + 4, DRIVE_BACK_SPEED/4	 //actually down beat...
};	
//
#define DRIVE_BACK_3SIZE	 4
RIFF_T driveBack3[DRIVE_BACK_3SIZE] = {
	DRIVE_BACK_PEDAL, DRIVE_BACK_SPEED/4,
		DRIVE_BACK_PITCH + 7, DRIVE_BACK_SPEED/4	 //actually down beat...
};

#define TEST_PITCH	47 //Bb1
#define TEST_SPEED	1
#define TEST_SIZE		8	
RIFF_T test[TEST_SIZE] = {
	TEST_PITCH, TEST_SPEED,
	AUD_OFF, TEST_SPEED,
		TEST_PITCH, TEST_SPEED,
	DOWN255, TEST_SPEED
};

#define THUMP_THUMP_PITCH	47 //Bb1
#define THUMP_THUMP_SPEED	60
#define THUMP_THUMP_SIZE		20	
RIFF_T thumpThump[THUMP_THUMP_SIZE] = {
	THUMP_THUMP_PITCH, THUMP_THUMP_SPEED - 4,
	AUD_OFF, 4,
	THUMP_THUMP_PITCH, THUMP_THUMP_SPEED - 4,
	AUD_OFF, 4,
	THUMP_THUMP_PITCH, THUMP_THUMP_SPEED - 4,
	AUD_OFF, 4,
	THUMP_THUMP_PITCH, THUMP_THUMP_SPEED - 4,
	AUD_OFF, 4,
};

#define THUMP_FALL8_PITCH	THUMP_THUMP_PITCH //A1
#define THUMP_FALL8_SPEED	THUMP_THUMP_SPEED
#define THUMP_FALL	2
#define THUMP_FALL8_SIZE		18	
RIFF_T thumpFall8[THUMP_FALL8_SIZE] = {
		THUMP_FALL8_PITCH, THUMP_FALL8_SPEED - 4,
	AUD_OFF, 4,
		THUMP_FALL8_PITCH - THUMP_FALL, THUMP_FALL8_SPEED - 4,		 //b7
	AUD_OFF, 4,
		THUMP_FALL8_PITCH - THUMP_FALL*2, THUMP_FALL8_SPEED - 4,	 //b6
	AUD_OFF, 4,
		THUMP_FALL8_PITCH - THUMP_FALL*4, THUMP_FALL8_SPEED - 4,	 //3
	AUD_OFF, 4
};

#define THUMP_2_PITCH	THUMP_THUMP_PITCH //A1
#define THUMP_2_SPEED	THUMP_THUMP_SPEED
#define THUMP_2_SIZE		18	
RIFF_T thump2[THUMP_2_SIZE] = {
		THUMP_2_PITCH, THUMP_2_SPEED - 4,
	AUD_OFF, 4,
		THUMP_2_PITCH + 4, THUMP_2_SPEED - 4, //3
	AUD_OFF, 4,
		THUMP_2_PITCH + 1, THUMP_2_SPEED - 4, //b2
	AUD_OFF, 4,
		THUMP_2_PITCH + 2, THUMP_2_SPEED - 4, //2
	AUD_OFF, 4
};

#define THUMP_3_PITCH	THUMP_THUMP_PITCH //A1
#define THUMP_3_SPEED	THUMP_THUMP_SPEED
#define THUMP_3_SIZE		18	
RIFF_T thump3[THUMP_3_SIZE] = {
		THUMP_3_PITCH, THUMP_3_SPEED - 4,
	AUD_OFF, 4,
		THUMP_3_PITCH + 5, THUMP_3_SPEED - 4, //4
	AUD_OFF, 4,
		THUMP_3_PITCH + 3, THUMP_3_SPEED - 4, //b3
	AUD_OFF, 4,
		THUMP_3_PITCH - 1, THUMP_3_SPEED - 4, //b7
	AUD_OFF, 4
};
//fast thump and fast fall in A1 work with rockMod in C1 - kinda...  moving on....

 #define ROCK_PULSE	80
 #define ROCK_ROOT	14	//C1 - wrond???
 
 #define TWOROCKB_SIZE		((107-75)*2)
 #define TWOROCKB_PITCH		(ROCK_ROOT+12) //+24)
 RIFF_T twoRockB[TWOROCKB_SIZE] = {
 		TWOROCKB_PITCH - 7, ROCK_PULSE/4 - 4,	  //1
	AUD_OFF, 4,
	TWOROCKB_PITCH - 7, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH - 7, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH - 7, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
		TWOROCKB_PITCH - 4, ROCK_PULSE/4 - 4,	 //2
	AUD_OFF, 4,
	TWOROCKB_PITCH - 4, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH - 4, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH - 4, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
		TWOROCKB_PITCH - 2, ROCK_PULSE/4 - 4,	  //3
	AUD_OFF, 4,
	TWOROCKB_PITCH - 2, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH - 2, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH - 2, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
		TWOROCKB_PITCH - 1, ROCK_PULSE/4 - 4,	  //4
	AUD_OFF, 4,
	TWOROCKB_PITCH - 1, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH - 1, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH - 1, ROCK_PULSE/4 - 4,
	AUD_OFF, 4
 };

 #define ONEROCKB_SIZE	  ((107-75)*2)
 #define ONEROCKB_PITCH	  (ROCK_ROOT+12) //+24)
 RIFF_T oneRockB[ONEROCKB_SIZE] = {
  		TWOROCKB_PITCH - 5, ROCK_PULSE/4 - 4,	  //1
	AUD_OFF, 4,
	TWOROCKB_PITCH - 5, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH - 5, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH - 5, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
		TWOROCKB_PITCH, ROCK_PULSE/4 - 4,	 //2
	AUD_OFF, 4,
	TWOROCKB_PITCH, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
		TWOROCKB_PITCH, ROCK_PULSE/4 - 4,	  //3
	AUD_OFF, 4,
	TWOROCKB_PITCH, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
		TWOROCKB_PITCH + 3, ROCK_PULSE/4 - 4,	  //4
	AUD_OFF, 4,
	TWOROCKB_PITCH + 3, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH + 3, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
	TWOROCKB_PITCH + 3, ROCK_PULSE/4 - 4,
	AUD_OFF, 4,
 };

 #define TWOROCKMOD_SIZE	((183-151) * 2)
 #define TWOROCKMOD_PITCH	(ROCK_ROOT  + 7)// + 12)
 #define STATIONSKIPUP		STATION_UP3
 #define STATIONSKIPDOWN	STATION_DOWN3

 RIFF_T	 twoRockMod[TWOROCKMOD_SIZE] = {	//skips up first
 		TWOROCKMOD_PITCH + 7, ROCK_PULSE/4,   //1
	STATIONSKIPUP, ROCK_PULSE/4,
	TWOROCKMOD_PITCH + 7, ROCK_PULSE/4,
	STATIONSKIPDOWN, ROCK_PULSE/4,
 		TWOROCKMOD_PITCH + 7, ROCK_PULSE/4,   //2
	STATIONSKIPUP, ROCK_PULSE/4,
	TWOROCKMOD_PITCH + 7, ROCK_PULSE/4,
	STATIONSKIPDOWN, ROCK_PULSE/4,
		TWOROCKMOD_PITCH + 5, ROCK_PULSE/4,   //3
	STATIONSKIPUP, ROCK_PULSE/4,
	TWOROCKMOD_PITCH + 5, ROCK_PULSE/4,
	STATIONSKIPDOWN, ROCK_PULSE/4,
		TWOROCKMOD_PITCH + 5, ROCK_PULSE/4,   //4
	STATIONSKIPUP, ROCK_PULSE/4,
	TWOROCKMOD_PITCH + 5, ROCK_PULSE/4,
	STATIONSKIPDOWN, ROCK_PULSE/4,
		TWOROCKMOD_PITCH, ROCK_PULSE/4,	   //5
	STATIONSKIPUP, ROCK_PULSE/4,
	TWOROCKMOD_PITCH, ROCK_PULSE/4,
	STATIONSKIPDOWN, ROCK_PULSE/4,
		TWOROCKMOD_PITCH, ROCK_PULSE/4,	   //6
	STATIONSKIPUP, ROCK_PULSE/4,
	TWOROCKMOD_PITCH, ROCK_PULSE/4,
	STATIONSKIPDOWN, ROCK_PULSE/4,
		TWOROCKMOD_PITCH, ROCK_PULSE/4,//7
	STATIONSKIPUP, ROCK_PULSE/4,
	TWOROCKMOD_PITCH, ROCK_PULSE/4,
	STATIONSKIPDOWN, ROCK_PULSE/4,
		TWOROCKMOD_PITCH, ROCK_PULSE/4,//7
	STATIONSKIPUP, ROCK_PULSE/4,
	TWOROCKMOD_PITCH, ROCK_PULSE/4,
	STATIONSKIPDOWN, ROCK_PULSE/4
};

 #define ONEROCKMOD_SIZE	((220-188) * 2)
 #define ONEROCKMOD_PITCH	(ROCK_ROOT)//+ 12)
 RIFF_T	 oneRockMod[ONEROCKMOD_SIZE] = {	  //skips down first
 		ONEROCKMOD_PITCH + 7, ROCK_PULSE/4,   //1
	STATIONSKIPDOWN, ROCK_PULSE/4,
	ONEROCKMOD_PITCH + 7, ROCK_PULSE/4,
	STATIONSKIPUP, ROCK_PULSE/4,
 		ONEROCKMOD_PITCH + 7, ROCK_PULSE/4,   //2
	STATIONSKIPDOWN, ROCK_PULSE/4,
	ONEROCKMOD_PITCH + 7, ROCK_PULSE/4,
	STATIONSKIPUP, ROCK_PULSE/4,
		ONEROCKMOD_PITCH + 5, ROCK_PULSE/4,   //3
	STATIONSKIPDOWN, ROCK_PULSE/4,
	ONEROCKMOD_PITCH + 5, ROCK_PULSE/4,
	STATIONSKIPUP, ROCK_PULSE/4,
		ONEROCKMOD_PITCH + 5, ROCK_PULSE/4,   //4
	STATIONSKIPDOWN, ROCK_PULSE/4,
	ONEROCKMOD_PITCH + 5, ROCK_PULSE/4,
	STATIONSKIPUP, ROCK_PULSE/4,
		ONEROCKMOD_PITCH, ROCK_PULSE/4,	   //5
	STATIONSKIPDOWN, ROCK_PULSE/4,
	ONEROCKMOD_PITCH, ROCK_PULSE/4,
	STATIONSKIPUP, ROCK_PULSE/4,
		ONEROCKMOD_PITCH, ROCK_PULSE/4,	   //6
	STATIONSKIPDOWN, ROCK_PULSE/4,
	ONEROCKMOD_PITCH, ROCK_PULSE/4,
	STATIONSKIPUP, ROCK_PULSE/4,
		ONEROCKMOD_PITCH, ROCK_PULSE/4,//7
	STATIONSKIPDOWN, ROCK_PULSE/4,
	ONEROCKMOD_PITCH, ROCK_PULSE/4,
	STATIONSKIPUP, ROCK_PULSE/4,
		ONEROCKMOD_PITCH, ROCK_PULSE/4,//8
	STATIONSKIPDOWN, ROCK_PULSE/4,
	ONEROCKMOD_PITCH, ROCK_PULSE/4,
	STATIONSKIPUP, ROCK_PULSE/4
};


 #define _1E2AND_SIZE	16
 #define _1E2AND_PITCH  14	
 #define _1E2AND_SPEED   ROCK_PULSE
 RIFF_T _1e2And[_1E2AND_SIZE] = {
 		_1E2AND_PITCH, _1E2AND_SPEED/8,  //1
	AUD_OFF, _1E2AND_SPEED/8,
		_1E2AND_PITCH, _1E2AND_SPEED/8,	 //E
	AUD_OFF, _1E2AND_SPEED/8,
		_1E2AND_PITCH, _1E2AND_SPEED/4,	 //2
	AUD_OFF, _1E2AND_SPEED/4,
		_1E2AND_PITCH, _1E2AND_SPEED/4,	 //&
	UPDOWN_OFF, _1E2AND_SPEED/4 
 };

 #define _1E2ANDTX_SIZE	18	
 #define _1E2ANDTX_SPEED   ROCK_PULSE
 RIFF_T _1e2AndTX[_1E2ANDTX_SIZE] = { //1-2-3-4
 	TX_OFF, 2,
	AUD_OFF, _1E2ANDTX_SPEED/4 - 2,
	TX_ON, (3*_1E2ANDTX_SPEED)/4,
	TX_OFF, _1E2ANDTX_SPEED/2,
	TX_ON, _1E2ANDTX_SPEED/2,
	TX_OFF, _1E2ANDTX_SPEED/4,
	TX_ON, (3*_1E2ANDTX_SPEED)/4,
	TX_OFF, _1E2ANDTX_SPEED/2,
	TX_ON, _1E2ANDTX_SPEED/2 
 };

 #define FOURFLOOR_SIZE	  18
 #define FOURFLOOR_PITCH  24	
 #define FOURFLOOR_SPEED   (THUMP_THUMP_SPEED*6)//ROCK_PULSE
 RIFF_T fourFloor[FOURFLOOR_SIZE] = {
 		FOURFLOOR_PITCH, 4,					 //1
	DOWN255, FOURFLOOR_SPEED/4 - 4,
	AUD_OFF, (3*FOURFLOOR_SPEED)/4,
		FOURFLOOR_PITCH, FOURFLOOR_SPEED/4,	 //2
	AUD_OFF, (3*FOURFLOOR_SPEED)/4,
		FOURFLOOR_PITCH, FOURFLOOR_SPEED/4,	 //3
	AUD_OFF, (3*FOURFLOOR_SPEED)/4,
		FOURFLOOR_PITCH, FOURFLOOR_SPEED/4,	 //4
	UPDOWN_OFF, (3*FOURFLOOR_SPEED)/4 
 };

 #define FOURFLOORTX_SIZE	18
 #define FOURFLOORTX_PITCH  14	
 #define FOURFLOORTX_SPEED   (THUMP_THUMP_SPEED*6) //ROCK_PULSE
 RIFF_T fourFloorTX[FOURFLOORTX_SIZE] = { //1-2-3-4
 	TX_OFF, 4,
	AUD_OFF, FOURFLOORTX_SPEED - 4,
	TX_ON, FOURFLOOR_SPEED,
	TX_OFF, FOURFLOOR_SPEED,
	TX_ON, FOURFLOOR_SPEED,
	TX_OFF, FOURFLOOR_SPEED,
	TX_ON, FOURFLOOR_SPEED,
	TX_OFF, FOURFLOOR_SPEED,
	TX_ON, FOURFLOOR_SPEED 
 };

#define AABA1_SIZE	(101-35)*2
RIFF_T AABA1[AABA1_SIZE] = {
		24, 2, 
	DOWN16, TWO_SECS/5-2,
	25, 2,
	UPDOWN_OFF, TWO_SECS/5-2,
	24, 2, 
	DOWN16, TWO_SECS/5-2,
	25, 2,
	UPDOWN_OFF, TWO_SECS/5-2,
	24, (TWO_SECS/5)*2,
	DOWN16, (TWO_SECS/5)*2-1,
	UPDOWN_OFF, 1,
		24, 2, 
	DOWN16, TWO_SECS/5-2,
	25, 2,
	UPDOWN_OFF, TWO_SECS/5-2,
	24, 2, 
	DOWN16, TWO_SECS/5-2,
	25, 2,
	UPDOWN_OFF, TWO_SECS/5-2,
	24, (TWO_SECS/5)*2,
	DOWN16, (TWO_SECS/5)*2-1,
	UPDOWN_OFF, 1,
		24, TWO_SECS/26-2,
	AUD_OFF, 2,
	24, TWO_SECS/20-2,
	AUD_OFF, 2,
	25, TWO_SECS/20-2,
	AUD_OFF, 2,
	25, TWO_SECS/20-2,
	AUD_OFF, 2,
	24, TWO_SECS/20-2,
	AUD_OFF, 2,
	24, TWO_SECS/20-2,
	AUD_OFF, 2,
	25, TWO_SECS/20-2,
	AUD_OFF, 2,
	25, TWO_SECS/20-2,
	DOWN4, 1,
	AUD_OFF, 1,
		24, TWO_SECS/20-2,
	AUD_OFF, 2,
	20, TWO_SECS/20-2,
	AUD_OFF, 2,
	20, TWO_SECS/20-2,
	AUD_OFF, 2,
	24, TWO_SECS/20-2,
	AUD_OFF, 2,
	24, TWO_SECS/20-2,
	AUD_OFF, 2,
	20, TWO_SECS/20-2,
	AUD_OFF, 2,
	20, TWO_SECS/20-4,
	UPDOWN_OFF, 2,
	AUD_OFF, 2,
		24, 2, 
	DOWN16, TWO_SECS/5-2,
	25, 2,
	UPDOWN_OFF, TWO_SECS/5-2,
	24, 2, 
	DOWN16, TWO_SECS/5-2,
	25, 2,
	UPDOWN_OFF, TWO_SECS/5-2,
	24, (TWO_SECS/5)*2,
	DOWN16, (TWO_SECS/5)*2-1,
	UPDOWN_OFF, 1,
};

#define UPDOWNTEST_SIZE	28
volatile byte code upDownTest[UPDOWNTEST_SIZE] = {
	48, TWO_SECS/4,
	DOWN255, TWO_SECS/4,
	48, TWO_SECS/4,
	48, TWO_SECS/4,
	UP255, TWO_SECS/4,
	24, TWO_SECS/4,
	12, TWO_SECS/2,
	1, TWO_SECS/2,
	UPDOWN_OFF, TWO_SECS/4,
};

#define STATIONBEAT1_SIZE	44
#define STATIONBEAT1_PITCH	12
volatile byte code stationBeat1[STATIONBEAT1_SIZE] = {
	STATIONBEAT1_PITCH-1, TWO_SECS/4,
	STATIONBEAT1_PITCH, TWO_SECS/4,
	STATION_UP2, TWO_SECS/8,
	STATION_DOWN2, TWO_SECS/8,
	STATION_UP3, TWO_SECS/8,
	STATION_DOWN3, TWO_SECS/8,
	STATION_UP4, TWO_SECS/8,
	STATION_DOWN4, TWO_SECS/8,
	STATION_UP5, TWO_SECS/8,
	STATION_DOWN5, TWO_SECS/8,
	STATION_UP6, TWO_SECS/8,
	STATION_DOWN6, TWO_SECS/8,
		STATION_UP5, TWO_SECS/8,
	STATION_DOWN5, TWO_SECS/8,
		STATION_UP4, TWO_SECS/8,
	STATION_DOWN4, TWO_SECS/8,
		STATION_UP3, TWO_SECS/8,
	STATION_DOWN3, TWO_SECS/8,
		STATION_UP2, TWO_SECS/8,
	STATION_DOWN2, TWO_SECS/8,
		STATION_UP, TWO_SECS/8,
	STATION_DOWN, TWO_SECS/8,
};

#define BUSYRIFF1_SIZE	((137 - 40)*2)

volatile byte code busyRiff1[BUSYRIFF1_SIZE] = {
		1+24, 60/4,
	1+22, 60/4,
	1+20, 60/4,
	1+18, 60/4,
	1+16, 60/4,
	1+14, 60/4,
	1+12, 60/4,
	1+10, 60/4,
		1+24, 60/4,
	1+22, 60/4,
	1+20, 60/4,
	1+18, 60/4,
	1+16, 60/4,
	1+14, 60/4,
	1+12, 60/4,
	1+10, 60/4,
		1+24, 60/4,
	1+22, 60/4,
	1+20, 60/4,
	1+18, 60/4,
	1+16, 60/4,
	1+14, 60/4,
	1+12, 60/4,
	1+10, 60/4,
		1+24, 60/4,
	1+22, 60/4,
	1+20, 60/4,
	1+18, 60/4,
	1+16, 60/4,
	1+14, 60/4,
	1+12, 60/4,
	1+10, 60/4,
		1+8, 60/5*2,
	1+12, 60/5*2,
	1+16, 60/5*2,
	1+20, 60/5*2,
	1+24, 60/5*2,
			1+8, 60/5,
	1+12, 60/5*2,
	1+16, 60/5*2,
	1+20, 60/5*2,
	1+24, 60/5*2,
			1+8, 60/5*2,
	1+12, 60/5*2,
	1+16, 60/5*2,
	1+20, 60/5*2,
	1+24, 60/5*2,
			1+8, 60/5,
	1+12, 60/5*2,
	1+16, 60/5*2,
	1+20, 60/5*2,
	1+24, 60/5*2,
		1+21, 60/5,
	1+18, 60/5,
	1+15, 60/5,
	1+12, 60/5,
	1+21, 60/5,
		1+21, 60/5,
	1+18, 60/5,
	1+15, 60/5,
	1+12, 60/5,
	1+21, 60/5,
		1+21, 60/5,
	1+18, 60/5,
	1+15, 60/5,
	1+12, 60/5,
	1+21, 60/5,
		1+21, 60/5,
	1+18, 60/5,
	1+15, 60/5,
	1+12, 60/5,
	1+21, 60/5,
		1+21, 60/5,
	1+18, 60/5,
	1+15, 60/5,
	1+12, 60/5,
	1+21, 60/5,	//11*60
		1+24, 60/6,
	1+22, 60/6,
	1+20, 60/6,
	1+18, 60/6,
	1+16, 60/6,
	1+14, 60/6,
		1+24, 60/6,
	1+22, 60/6,
	1+20, 60/6,
	1+18, 60/6,
	1+16, 60/6,
	1+14, 60/6,
		1+24, 60/6,
	1+22, 60/6,
	1+20, 60/6,
	1+18, 60/6,
	1+16, 60/6,
	1+14, 60/6,
	1+12, 60,
	1+10, 60
};

#define SUMMRIFF_SIZE	80	
volatile byte code summRiff[SUMMRIFF_SIZE] = {
	1+24, BPM160,
	AUD_OFF, BPM160,
	1+24, BPM160,
	AUD_OFF, BPM160,
	1+12, BPM160,
	AUD_OFF, BPM160,
	1+12, BPM160,
	AUD_OFF, BPM160,
	1+24, BPM160,
	AUD_OFF, BPM160,
	1+12, BPM160,
	AUD_OFF, BPM160,
	1+7, BPM160,
	AUD_OFF, BPM160,
	1+6, BPM160,
	AUD_OFF, BPM160,
	1+24, BPM160,
	AUD_OFF, BPM160,
	1+24, BPM160,
	AUD_OFF, BPM160,
	1+12, BPM160,
	AUD_OFF, BPM160,
	1+12, BPM160,
	AUD_OFF, BPM160,
	1+24, BPM160,
	AUD_OFF, BPM160,
	1+12, BPM160,
	AUD_OFF, BPM160,
	1+7, BPM160,
	AUD_OFF, BPM160*2,
	1+6, BPM160,
	AUD_OFF, BPM160*2,
	1+12, BPM160,
	1+7, BPM160*2,
	1+6, BPM160*2,
	1+5, BPM160,
	1+4, BPM160*4,
	1+2, BPM160*4,
	1+1, BPM160*4,
	1, BPM160*8	
};
*/	
#endif