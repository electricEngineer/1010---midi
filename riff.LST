C51 COMPILER V8.12   RIFF                                                                  11/29/2015 23:26:50 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE RIFF
OBJECT MODULE PLACED IN riff.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE riff.c OMF2 ROM(COMPACT) OPTIMIZE(7,SPEED) BROWSE MODP2 DEBUG

line level    source

   1          #include "riff.h"
   2          #include "midi_spec.h"
   3          #include "itrip.h"
   4          
   5          ////////utility riffs
   6          
   7          unsigned char code sthRest[5] = {
   8                  5,
   9                          0, 255, //notes off
  10                  6, 127
  11          };
  12          
  13          unsigned char code eiRest[5] = {
  14                  5,
  15                          0, 255, //notes off
  16                  12, 127
  17          };
  18          
  19          unsigned char code qRest[5] = {
  20                  5,
  21                          0, 255, //notes off
  22                  24, 127
  23          };
  24          
  25          unsigned char code hRest[5] = {
  26                  5,
  27                          0, 255, //notes off
  28                  24*3, 127
  29          };
  30          
  31          unsigned char code wRest[5] = {
  32                  5,
  33                          0, 255, //notes off
  34                  24*4, 127
  35          };
  36          
  37          //single pitches with switches
  38          unsigned char code minorDrone[5] = {
  39                  5,
  40          #if (MY_L_CHAN == 0)
                      0, MINORDRONE_ROOT, 24*4, MINORDRONE_ROOT+0x80
              #elif (MY_L_CHAN == 2)
                      0, MINORDRONE_ROOT+2, 24*4, MINORDRONE_ROOT+2+0x80
              #elif (MY_L_CHAN == 4)
                      0, MINORDRONE_ROOT+3, 24*4, MINORDRONE_ROOT+3+0x80
              #elif (MY_L_CHAN == 6)
                      0, MINORDRONE_ROOT+5, 24*4, MINORDRONE_ROOT+5+0x80
              #elif (MY_L_CHAN == 8)
                      0, MINORDRONE_ROOT+7, 24*4, MINORDRONE_ROOT+7+0x80
              #elif (MY_L_CHAN == 10)
                      0, MINORDRONE_ROOT+8, 24*4, MINORDRONE_ROOT+8+0x80
              #elif (MY_L_CHAN == 12)
                      0, MINORDRONE_ROOT+10, 24*4, MINORDRONE_ROOT+10+0x80
              #elif (MY_L_CHAN == 14)
  55                  0, MINORDRONE_ROOT+11, 24*4, MINORDRONE_ROOT+11+0x80
C51 COMPILER V8.12   RIFF                                                                  11/29/2015 23:26:50 PAGE 2   

  56          #endif
  57          };
  58          
  59          unsigned char code wholeDrone[5] = {
  60                  5,
  61                  0, WHOLEDRONE_ROOT+MY_L_CHAN, 24*4, WHOLEDRONE_ROOT+0x80+MY_L_CHAN
  62          };
  63          
  64          //COORD UTILL
  65          unsigned char code sthRestCoord[RECO_S] = {      //one empty bar
  66                  RECO_S,
  67                  6, NOTE_ON
  68          };
  69          
  70          unsigned char code eiRestCoord[RECO_S] = {       //one empty bar
  71                  RECO_S,
  72                  12, NOTE_ON
  73          };
  74          
  75          unsigned char code qRestCoord[RECO_S] = {        //one empty bar
  76                  RECO_S,
  77                  24, NOTE_ON
  78          };
  79          
  80          unsigned char code hRestCoord[RECO_S] = {        //one empty bar
  81                  RECO_S,
  82                  24*2, NOTE_ON
  83          };
  84          
  85          unsigned char code wRestCoord[RECO_S] = {        //one empty bar
  86                  RECO_S,
  87                  24*4, NOTE_ON
  88          };
  89          
  90          unsigned char code on0Tx[CRTLTX_S] = {
  91                  CRTLTX_S,
  92                  0, CONTROL+0, GENERAL_BUTTON_1_on, 127
  93          };
  94          
  95          unsigned char code on2Tx[CRTLTX_S] = {
  96                  CRTLTX_S,
  97                  0, CONTROL+2, GENERAL_BUTTON_1_on, 127
  98          };
  99          
 100          unsigned char code on4Tx[CRTLTX_S] = {
 101                  CRTLTX_S,
 102                  0, CONTROL+4, GENERAL_BUTTON_1_on, 127
 103          };
 104          
 105          unsigned char code on6Tx[CRTLTX_S] = {
 106                  CRTLTX_S,
 107                  0, CONTROL+6, GENERAL_BUTTON_1_on, 127
 108          };
 109          
 110          unsigned char code on8Tx[CRTLTX_S] = {
 111                  CRTLTX_S,
 112                  0, CONTROL+8, GENERAL_BUTTON_1_on, 127
 113          };
 114          
 115          unsigned char code on10Tx[CRTLTX_S] = {
 116                  CRTLTX_S,
 117                  0, CONTROL+10, GENERAL_BUTTON_1_on, 127
C51 COMPILER V8.12   RIFF                                                                  11/29/2015 23:26:50 PAGE 3   

 118          };
 119          
 120          unsigned char code on12Tx[CRTLTX_S] = {
 121                  CRTLTX_S,
 122                  0, CONTROL+12, GENERAL_BUTTON_1_on, 127
 123          };
 124          
 125          unsigned char code on14Tx[CRTLTX_S] = {
 126                  CRTLTX_S,
 127                  0, CONTROL+14, GENERAL_BUTTON_1_on, 127
 128          };
 129          
 130          unsigned char code off0Tx[CRTLTX_S] = {
 131                  CRTLTX_S,
 132                  0, CONTROL+0, GENERAL_BUTTON_1_on, 0
 133          };
 134          
 135          unsigned char code off2Tx[CRTLTX_S] = {
 136                  CRTLTX_S,
 137                  0, CONTROL+2, GENERAL_BUTTON_1_on, 0
 138          };
 139          
 140          unsigned char code off4Tx[CRTLTX_S] = {
 141                  CRTLTX_S,
 142                  0, CONTROL+4, GENERAL_BUTTON_1_on, 0
 143          };
 144          
 145          unsigned char code off6Tx[CRTLTX_S] = {
 146                  CRTLTX_S,
 147                  0, CONTROL+6, GENERAL_BUTTON_1_on, 0
 148          };
 149          
 150          unsigned char code off8Tx[CRTLTX_S] = {
 151                  CRTLTX_S,
 152                  0, CONTROL+8, GENERAL_BUTTON_1_on, 0
 153          };
 154          
 155          unsigned char code off10Tx[CRTLTX_S] = {
 156                  CRTLTX_S,
 157                  0, CONTROL+10, GENERAL_BUTTON_1_on, 0
 158          };
 159          
 160          unsigned char code off12Tx[CRTLTX_S] = {
 161                  CRTLTX_S,
 162                  0, CONTROL+12, GENERAL_BUTTON_1_on, 0
 163          };
 164          
 165          unsigned char code off14Tx[CRTLTX_S] = {
 166                  CRTLTX_S,
 167                  0, CONTROL+14, GENERAL_BUTTON_1_on, 0
 168          };
 169          
 170          //heavy Beats!!!   ???
 171          #define CLKMULT 4
 172          unsigned char code beatCoord1[BEATCOORD1_S] = {
 173                  BEATCOORD1_S,
 174                  0, TEMPO_SET+((byte)(BEAT1_TEMPO>>16)), ((byte)(BEAT1_TEMPO>>8)), ((byte)(BEAT1_TEMPO)),
 175                          6*CLKMULT, CONTROL+14, GENERAL_BUTTON_1_on, 0,
 176                  7*CLKMULT, CONTROL+8, GENERAL_BUTTON_1_on, 0,
 177                  8*CLKMULT, CONTROL+12, GENERAL_BUTTON_1_on, 0,
 178                  9*CLKMULT, CONTROL+6, GENERAL_BUTTON_1_on, 0,
 179                  10*CLKMULT, CONTROL+10,  GENERAL_BUTTON_1_on, 0,
C51 COMPILER V8.12   RIFF                                                                  11/29/2015 23:26:50 PAGE 4   

 180                  11*CLKMULT, CONTROL+4, GENERAL_BUTTON_1_on, 0,
 181                  12*CLKMULT, CONTROL+2, GENERAL_BUTTON_1_on, 0,
 182                  13*CLKMULT, CONTROL+0,  GENERAL_BUTTON_1_on, 0,
 183                          13*CLKMULT, CONTROL, GENERAL_BUTTON_1_on, 127,
 184                  12*CLKMULT, CONTROL+6, GENERAL_BUTTON_1_on, 127,
 185                  11*CLKMULT, CONTROL+2, GENERAL_BUTTON_1_on, 127,
 186                  10*CLKMULT, CONTROL+8, GENERAL_BUTTON_1_on, 127,
 187                  9*CLKMULT, CONTROL+4,  GENERAL_BUTTON_1_on, 127,
 188                  8*CLKMULT, CONTROL+10, GENERAL_BUTTON_1_on, 127,
 189                  7*CLKMULT, CONTROL+12, GENERAL_BUTTON_1_on, 127,
 190                  6*CLKMULT, CONTROL+14,  GENERAL_BUTTON_1_on, 127
 191          //              6, CONTROL, GENERAL_BUTTON_1_on, 127,
 192          //      7, CONTROL+2, GENERAL_BUTTON_1_on, 127,
 193          //      8, CONTROL+4, GENERAL_BUTTON_1_on, 127,
 194          //      9, CONTROL+6, GENERAL_BUTTON_1_on, 127,
 195          //      10, CONTROL+8,  GENERAL_BUTTON_1_on, 127,
 196          //      11, CONTROL+10, GENERAL_BUTTON_1_on, 127,
 197          //      12, CONTROL+12, GENERAL_BUTTON_1_on, 127,
 198          //      13, CONTROL+14,  GENERAL_BUTTON_1_on, 127,
 199          //              13, CONTROL, GENERAL_BUTTON_1_on, 0,
 200          //      12, CONTROL+2, GENERAL_BUTTON_1_on, 0,
 201          //      11, CONTROL+4, GENERAL_BUTTON_1_on, 0,
 202          //      10, CONTROL+6, GENERAL_BUTTON_1_on, 0,
 203          //      9, CONTROL+8,  GENERAL_BUTTON_1_on, 0,
 204          //      8, CONTROL+10, GENERAL_BUTTON_1_on, 0,
 205          //      7, CONTROL+12, GENERAL_BUTTON_1_on, 0,
 206          //      6, CONTROL+14,  GENERAL_BUTTON_1_on, 0,
 207          };
 208          
 209          unsigned char code beatCoord2[BEATCOORD1_S] = {
 210                  BEATCOORD1_S,
 211                  0, TEMPO_SET+((byte)(BEAT2_TEMPO>>16)), ((byte)(BEAT2_TEMPO>>8)), ((byte)(BEAT2_TEMPO)),
 212                          6*CLKMULT, CONTROL+14, GENERAL_BUTTON_1_on, 127,
 213                  7*CLKMULT, CONTROL+14, GENERAL_BUTTON_1_on, 0,
 214                  8*CLKMULT, CONTROL+12, GENERAL_BUTTON_1_on, 127,
 215                  9*CLKMULT, CONTROL+12, GENERAL_BUTTON_1_on, 0,
 216                  10*CLKMULT, CONTROL+10,  GENERAL_BUTTON_1_on, 127,
 217                  11*CLKMULT, CONTROL+10, GENERAL_BUTTON_1_on, 0,
 218                  12*CLKMULT, CONTROL+8, GENERAL_BUTTON_1_on, 127,
 219                  13*CLKMULT, CONTROL+8,  GENERAL_BUTTON_1_on, 0,
 220                          13*CLKMULT, CONTROL+6, GENERAL_BUTTON_1_on, 127,
 221                  12*CLKMULT, CONTROL+6, GENERAL_BUTTON_1_on, 0,
 222                  11*CLKMULT, CONTROL+4, GENERAL_BUTTON_1_on, 127,
 223                  10*CLKMULT, CONTROL+4, GENERAL_BUTTON_1_on, 0,
 224                  9*CLKMULT, CONTROL+2,  GENERAL_BUTTON_1_on, 127,
 225                  8*CLKMULT, CONTROL+2, GENERAL_BUTTON_1_on, 0,
 226                  7*CLKMULT, CONTROL, GENERAL_BUTTON_1_on, 127,
 227                  6*CLKMULT, CONTROL,  GENERAL_BUTTON_1_on, 0
 228          };
 229          
 230          unsigned char code beat1[BEAT1_S] = {
 231                  BEAT1_S,
 232                  24*4, BEAT_ROOT+((MY_L_CHAN*2))
 233          };
 234           
 235          //Our body
 236          
 237          //omes
 238          
 239          //driving me backwards!!!!! Vamp on Vcc....
 240          unsigned char code dmbInit[DMBINIT_S] = {        //tempo... does beat pickup!!! all but 6 off
 241                  DMBINIT_S,
C51 COMPILER V8.12   RIFF                                                                  11/29/2015 23:26:50 PAGE 5   

 242                  0, TEMPO_SET+((byte)(DMB_TEMPO>>16)), ((byte)(DMB_TEMPO>>8)), ((byte)(DMB_TEMPO)),
 243                  3, CONTROL, GENERAL_BUTTON_1_on, 0,
 244                  3, CONTROL+2, GENERAL_BUTTON_1_on, 0,
 245                  3, CONTROL+4, GENERAL_BUTTON_1_on, 0,
 246                  3, CONTROL+6, GENERAL_BUTTON_1_on, 127, //only 7 on at first...
 247                  3, CONTROL+8,  GENERAL_BUTTON_1_on, 0,
 248                  3, CONTROL+10, GENERAL_BUTTON_1_on, 0,
 249                  3, CONTROL+12, GENERAL_BUTTON_1_on, 0,
 250                  3, CONTROL+14,  GENERAL_BUTTON_1_on, 0  
 251          };
 252          
 253          unsigned char code dmbVamp0[DMBVAMP_S] = {
 254                  DMBVAMP_S,
 255                  12, 255,         //silent on down beat
 256                  12, DMB_PEDAL+0x80
 257          };
 258          
 259          unsigned char code dmbVamp1[DMBVAMP_S] = {
 260                  DMBVAMP_S,
 261                  12,     DMB_ROOT+0x80,
 262                  12, DMB_PEDAL+0x80
 263          };
 264          
 265          unsigned char code dmbRoot0[DMBROOT_S] = {
 266                  DMBROOT_S,
 267                          0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 268                  0, 255, 12, 127,
 269                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 270                  0, 255, 12, 127,
 271                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 272                  0, 255, 12, 127, 
 273                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 274                  0, 255, 12, 127, 
 275                          0, DMB_ROOT+12, 12, DMB_ROOT+7+0x80,
 276                  0, 255, 12, 127, 
 277                  0, DMB_ROOT+12, 12, DMB_ROOT+7+0x80,
 278                  0, 255, 12, 127, 
 279                  0, DMB_ROOT+12, 12, DMB_ROOT+7+0x80,
 280                  0, 255, 12, 127, 
 281                  0, DMB_ROOT+12, 12, DMB_ROOT+7+0x80,
 282                  0, 255, 12, 127, 
 283                          0, DMB_ROOT+12, 12, DMB_ROOT+9+0x80,
 284                  0, 255, 12, 127, 
 285                  0, DMB_ROOT+12, 12, DMB_ROOT+9+0x80,
 286                  0, 255, 12, 127, 
 287                  0, DMB_ROOT+12, 12, DMB_ROOT+9+0x80,
 288                  0, 255, 12, 127, 
 289                  0, DMB_ROOT+12, 12, DMB_ROOT+9+0x80,
 290                  0, 255, 12, 127, 
 291                          0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 292                  0, 255, 12, 127, 
 293                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 294                  0, 255, 12, 127, 
 295                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 296                  0, 255, 12, 127, 
 297                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 298                  0, 255, 12, 127 
 299          };
 300          
 301          unsigned char code dmbRoot1[DMBROOT_S] = {
 302                  DMBROOT_S,
 303                          0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
C51 COMPILER V8.12   RIFF                                                                  11/29/2015 23:26:50 PAGE 6   

 304                  0, DMB_PEDAL+0x80, 12, 127,
 305                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 306                  0, DMB_PEDAL+0x80, 12, 127,
 307                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 308                  0, DMB_PEDAL+0x80, 12, 127, 
 309                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 310                  0, DMB_PEDAL+0x80, 12, 127, 
 311                          0, DMB_ROOT+12, 12, DMB_ROOT+7+0x80,
 312                  0, DMB_PEDAL+0x80, 12, 127, 
 313                  0, DMB_ROOT+12, 12, DMB_ROOT+7+0x80,
 314                  0, DMB_PEDAL+0x80, 12, 127, 
 315                  0, DMB_ROOT+12, 12, DMB_ROOT+7+0x80,
 316                  0, DMB_PEDAL+0x80, 12, 127, 
 317                  0, DMB_ROOT+12, 12, DMB_ROOT+7+0x80,
 318                  0, DMB_PEDAL+0x80, 12, 127, 
 319                          0, DMB_ROOT+12, 12, DMB_ROOT+9+0x80,
 320                  0, DMB_PEDAL+0x80, 12, 127, 
 321                  0, DMB_ROOT+12, 12, DMB_ROOT+9+0x80,
 322                  0, DMB_PEDAL+0x80, 12, 127, 
 323                  0, DMB_ROOT+12, 12, DMB_ROOT+9+0x80,
 324                  0, DMB_PEDAL+0x80, 12, 127, 
 325                  0, DMB_ROOT+12, 12, DMB_ROOT+9+0x80,
 326                  0, DMB_PEDAL+0x80, 12, 127, 
 327                          0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 328                  0, DMB_PEDAL+0x80, 12, 127, 
 329                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 330                  0, DMB_PEDAL+0x80, 12, 127, 
 331                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 332                  0, DMB_PEDAL+0x80, 12, 127, 
 333                  0, DMB_ROOT+12, 12, DMB_ROOT+8+0x80,
 334                  0, DMB_PEDAL+0x80, 12, 127 
 335          };
 336          
 337          unsigned char code dmbBDHa[DMBBD_S] = {  //hit plus halfRest
 338                  DMBBD_S,
 339                  1, DMB_ROOT+7,
 340                  1, DMB_ROOT-12,
 341                  46, 127
 342          };
 343          
 344          unsigned char code dmbBDWh[DMBBD_S] = {  //hit plus wholeRest
 345                  DMBBD_S,
 346                  1, DMB_ROOT+7,
 347                  1, DMB_ROOT-12,
 348                  94, 127
 349          };
 350          
 351          ////////////////// TEST_Riffs
 352          byte code testCo1[3] = {
 353                  3,
 354                  24*5, NOTE_ON   
 355          };
 356          
 357          byte code testCo1b[7] = {
 358                  5,
 359                  24*5, NOTE_ON,
 360          //      0, SONG_POSITION, 0x70, 0x01, //LSB first
 361                  24*5, START     
 362          };
 363          
 364          byte code testCo2[9] = {
 365                  9,
C51 COMPILER V8.12   RIFF                                                                  11/29/2015 23:26:50 PAGE 7   

 366                  24*5, TEMPO_SET, 0x96, 0xb4, //240bpm??
 367                  24*5, TEMPO_SET+0x0F, 0xFF, 0xFF //slow as possible     
 368          };
 369          
 370          byte code testCo3[69] = {
 371                  69,
 372                  0, TEMPO_SET + 1, 0x2d, 0x68, //120bpm = 0x12D68
 373                  0, CONTROL, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 374                  0, CONTROL, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 375                  0, CONTROL+2, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 376                  0, CONTROL+2, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 377                  0, CONTROL+4, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 378                  0, CONTROL+4, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 379                  0, CONTROL+6, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 380                  0, CONTROL+6, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 381                  0, CONTROL+8, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 382                  0, CONTROL+8, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 383                  0, CONTROL+10, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 384                  0, CONTROL+10, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 385                  0, CONTROL+12, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 386                  0, CONTROL+12, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 387                  0, CONTROL+14, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 388                  0, CONTROL+14, GENERAL_SLIDER_1_lo, STATION_TO_LO(879)
 389          };                 
 390          
 391          byte code testCo3b[69] = {
 392                  69,
 393                  0, TEMPO_SET, 0x4b, 0x5a, //480bpm = 0x4b5a?
 394                  0, CONTROL, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 395                  0, CONTROL, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 396                  0, CONTROL+2, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 397                  0, CONTROL+2, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 398                  0, CONTROL+4, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 399                  0, CONTROL+4, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 400                  0, CONTROL+6, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 401                  0, CONTROL+6, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 402                  0, CONTROL+8, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 403                  0, CONTROL+8, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 404                  0, CONTROL+10, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 405                  0, CONTROL+10, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 406                  0, CONTROL+12, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 407                  0, CONTROL+12, GENERAL_SLIDER_1_lo, STATION_TO_LO(879),
 408                  0, CONTROL+14, GENERAL_SLIDER_1_hi, STATION_TO_HI(879),
 409                  0, CONTROL+14, GENERAL_SLIDER_1_lo, STATION_TO_LO(879)
 410          };
 411          
 412          byte code testCo3c[69] = {
 413                  69,
 414                  0, TEMPO_SET, 0x96, 0xb4, //240bpm
 415                  0, CONTROL, GENERAL_SLIDER_1_hi, STATION_TO_HI(1001),
 416                  0, CONTROL, GENERAL_SLIDER_1_lo, STATION_TO_LO(1001),
 417                  0, CONTROL+2, GENERAL_SLIDER_1_hi, STATION_TO_HI(1001),
 418                  0, CONTROL+2, GENERAL_SLIDER_1_lo, STATION_TO_LO(1001),
 419                  0, CONTROL+4, GENERAL_SLIDER_1_hi, STATION_TO_HI(1001),
 420                  0, CONTROL+4, GENERAL_SLIDER_1_lo, STATION_TO_LO(1001),
 421                  0, CONTROL+6, GENERAL_SLIDER_1_hi, STATION_TO_HI(1001),
 422                  0, CONTROL+6, GENERAL_SLIDER_1_lo, STATION_TO_LO(1001),
 423                  0, CONTROL+8, GENERAL_SLIDER_1_hi, STATION_TO_HI(1001),
 424                  0, CONTROL+8, GENERAL_SLIDER_1_lo, STATION_TO_LO(1001),
 425                  0, CONTROL+10, GENERAL_SLIDER_1_hi, STATION_TO_HI(1001),
 426                  0, CONTROL+10, GENERAL_SLIDER_1_lo, STATION_TO_LO(1001),
 427                  0, CONTROL+12, GENERAL_SLIDER_1_hi, STATION_TO_HI(1001),
C51 COMPILER V8.12   RIFF                                                                  11/29/2015 23:26:50 PAGE 8   

 428                  0, CONTROL+12, GENERAL_SLIDER_1_lo, STATION_TO_LO(1001),
 429                  0, CONTROL+14, GENERAL_SLIDER_1_hi, STATION_TO_HI(1001),
 430                  0, CONTROL+14, GENERAL_SLIDER_1_lo, STATION_TO_LO(1001)
 431          };                 
 432          byte code testCo4[69] = {
 433                  69,
 434                  0, TEMPO_SET, 0x96, 0xb4, //240bpm??
 435                  0, CONTROL, GENERAL_BUTTON_1_on, 0,
 436                  0, CONTROL+2, GENERAL_BUTTON_1_on, 0,
 437                  0, CONTROL+4, GENERAL_BUTTON_1_on, 0,
 438                  0, CONTROL+6, GENERAL_BUTTON_1_on, 0,
 439                  0, CONTROL+8,  GENERAL_BUTTON_1_on, 0,
 440                  0, CONTROL+10, GENERAL_BUTTON_1_on, 0,
 441                  0, CONTROL+12, GENERAL_BUTTON_1_on, 0,
 442                  24*5, CONTROL+14,  GENERAL_BUTTON_1_on, 0,
 443                  0, CONTROL, GENERAL_BUTTON_1_on, 127,
 444                  0, CONTROL+2, GENERAL_BUTTON_1_on, 127,
 445                  0, CONTROL+4, GENERAL_BUTTON_1_on, 127,
 446                  0, CONTROL+6, GENERAL_BUTTON_1_on, 127,
 447                  0, CONTROL+8,  GENERAL_BUTTON_1_on, 127,
 448                  0, CONTROL+10, GENERAL_BUTTON_1_on, 127,
 449                  0, CONTROL+12, GENERAL_BUTTON_1_on, 127,
 450                  24*5, CONTROL+14,  GENERAL_BUTTON_1_on, 127
 451          };
 452          
 453          byte code testR1[TEST_LEN+1] = {
 454                  TEST_LEN,
 455                  24, 24,
 456                  24, 25,
 457                  24, 26,
 458                  24, 27,
 459                  24, 30
 460          };
 461          
 462          byte code testR2[TEST_LEN+1] = {
 463                  TEST_LEN,
 464                  24, 34,
 465                  24, 28,
 466                  24, 20,
 467                  24, 18,
 468                  24, 17
 469          };
 470          
 471          byte code testR3[TEST_LEN+1] = {
 472                  TEST_LEN,
 473                  24, 37,
 474                  24, 38,
 475                  24, 37,
 476                  24, 38,
 477                  24, 37
 478          };


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    918    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V8.12   RIFF                                                                  11/29/2015 23:26:50 PAGE 9   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
