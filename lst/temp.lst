C51 COMPILER V8.12   TEMP                                                                  12/15/2010 02:37:03 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN .\obj\temp.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE temp.c ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOLS PRIN
                    -T(.\lst\temp.lst) PREPRINT(.\lst\temp.i) OBJECT(.\obj\temp.obj)

line level    source

   1          include <reg936.h>
*** ERROR C129 IN LINE 1 OF TEMP.C: missing ';' before '<'
   2          #include "iTrip.h"
   1      =1  /*
   2      =1  itrip HEADERZ v1e-9
   3      =1  */
   4      =1  
   5      =1  #ifndef ITRIP_H
   6      =1  #define ITRIP_H 
   7      =1  /**************************GLOBALS*******************************************/
   8      =1  typedef unsigned char byte;
   9      =1  typedef unsigned int word;
  10      =1  
  11      =1  #define MAX_FREQ        1080
  12      =1  #define MIN_FREQ        700
  13      =1  
  14      =1  #define BARKER_7                0x58    //01011000
  15      =1  #define NOT_BARKER_7    0xA7    //10100111
  16      =1  
  17      =1  #define fineStruct 30
  18      =1  #define BUFFER_LENGTH   6
  19      =1  #define SAMPLES_PER_BIT 3
  20      =1  /*******************************EMPerical numbers
  21      =1  11.8.10
  22      =1  50 -> 416 HZ
  23      =1  5 - >31.25 kHz
  24      =1  
  25      =1  11.22.10
  26      =1  30 -> 25k  nothing else....
  27      =1  *******************************************************************************/
  28      =1  //#define NORM_T
  29      =1  //#define SHOW_T
  30      =1  //#define SYNTH_T
  31      =1  //#define LEAVE_T
  32      =1  //#define DELEAVE_T
  33      =1  //#define CODE_T
  34      =1  
  35      =1  //#define ADC_T_SOFT
  36      =1  //#define ADC_DELAY  10000
  37      =1  
  38      =1  //#def4-ADC_T_HARD               
  39      =1  #define ADC_ARRAY_L 16  
  40      =1  
  41      =1  #define COM_T
  42      =1  #define rawInput                (CMP1 & 0x01)   //P0^4 is comp1 input from radio through 1 uF
  43      =1  #define CCU_MIN_CYCLE   164     //<100 Hz
  44      =1  #define CCU_MIN_GOOD    521     //<15 Hz
  45      =1  #define CCU_DC                  8192    //<1 Hz
  46      =1  #define CCU_MAX_BAD             25              //max number of fast cycles ~.5 sec
  47      =1  
  48      =1  #define MIN_GOOD_HALF_CYCLES    12 //~1 sec
  49      =1  #define MAX_TUNING_TRIES                381 
  50      =1  //#define POW_T 
  51      =1  
C51 COMPILER V8.12   TEMP                                                                  12/15/2010 02:37:03 PAGE 2   

  52      =1  //#define OSC_T 
  53      =1  
  54      =1  /****************************PROTOS*********************/
  55      =1          void setup ();  //name and turn on
  56      =1          void delay (word cnt);
  57      =1          void shiftout8 (byte d);
  58      =1          void shiftout16 (word d);
  59      =1          void shiftout32 (word dh, word dl);
  60      =1          void txProg ();
  61      =1          void txStero ();
  62      =1          void txMono ();
  63      =1          void setFreq (word freq);
  64      =1          void incFreq ();
  65      =1          void decFreq ();
  66      =1          void setChan (byte numChan);
  67      =1          bit getBit ();
  68      =1  
  69      =1  /*******************deinterleaver*********************
  70      =1  DESC:           Loads interbuf with sequenced data from inBuf....
  71      =1  
  72      =1  RETURNS:        Nothing.
  73      =1  
  74      =1  CAUTION:        inBuf must be full and interByte, inByte must 
  75      =1                          = 8 and interBuf must be zeros  
  76      =1  
  77      =1  299 - 366 us execution
  78      =1  *******************************************************/        
  79      =1          void deInterleave ();
  80      =1          void deleaveBits ();
  81      =1          void testDI();
  82      =1  /*************************************8
  83      =1  inBuf must be empty and inter / inByte must = 8
  84      =1  and interBuf must hold sequenced data
  85      =1  loads inBuf with interleaved data...
  86      =1  
  87      =1  340  - 375 us
  88      =1  ************************************/
  89      =1          void interleave ();
  90      =1          void leaveBits ();
  91      =1          void testI ();
  92      =1          void sync();
  93      =1          void testEncode(byte cnt);
  94      =1          void encode();
  95      =1          void encode_ASM ();
  96      =1          void testDecode(char error);
  97      =1          void decode ();
  98      =1          void decode_ASM();
  99      =1  /*******************************************************
 100      =1  DESC:    Autotuning algorithm detects low frequency audio 
 101      =1                   feedback characteristic of a good TX to RX lock.
 102      =1  RETURNS: The frequency of the Rx on the input 
 103      =1                  (0x0000 indicates a failure, 0x01 indicates DC / no input on pin) 
 104      =1  CAUTION: The RX must be able to swing the output audio
 105      =1                   greater than 1.24V and produce a frequency of 
 106      =1                   feedback <15Hz. (Headphone outs work)
 107      =1  *********************************************************/
 108      =1          word autotune ();
 109      =1          
 110      =1  /******************PIN NAMES****************************/       
 111      =1          sbit txVcc = P2^7;
 112      =1          sbit txData = P2^2;
 113      =1          sbit txClk = P2^3;
C51 COMPILER V8.12   TEMP                                                                  12/15/2010 02:37:03 PAGE 3   

 114      =1          sbit LED = P2^5;
 115      =1          sbit CE = P2^4;
 116      =1          sbit midButt = P0^0;
 117      =1          sbit hiButt = P0^1;
 118      =1          sbit loButt = P0^2;
 119      =1          sbit audioL = P0^3;
 120      =1          sbit audioN = P0^4;     //must be soldered and AC coupled (DC blocked) with 1 uF
 121      =1          sbit ccTimer = P2^0;
 122      =1  #endif
   3          
   4          extern volatile unsigned char inBuf[BUFFER_LENGTH], interBuf[BUFFER_LENGTH];
   5          extern volatile unsigned char *outBuf;
   6          extern volatile unsigned char inRegister, inBit, inByte, interByte;
   7          
   8          extern volatile bit barkerFlag, notBarkerFlag, inEmpty;
   9          
  10          void leaveBits () {
  11                  if(!inEmpty || interByte != BUFFER_LENGTH || inByte != BUFFER_LENGTH) {
  12                          return;
  13                  }
  14                  for (interByte = 7; interByte > 3; --interByte) {
  15                          for(inByte = 7; inByte > 3; --inByte) {
  16                                  inBuf[inByte] <<= 1;
  17                                  if (interBuf[interByte] & 0x80) {
  18                                          inBuf[inByte] += 0x10;
  19                                  }
  20                                  if (interBuf[interByte] & 0x40) {
  21                                          ++inBuf[inByte]; 
  22                                  }
  23                                  interBuf[interByte] <<= 2; 
  24                          }
  25                  }
  26                  for (interByte; interByte; interByte--) {
  27                          while(inByte--) {
  28                                  inBuf[inByte] <<= 1;
  29                                  if (interBuf[interByte] & 0x80) {
  30                                          inBuf[inByte] += 0x10;
  31                                  }
  32                                  if (interBuf[interByte] & 0x40) {
  33                                          ++inBuf[inByte]; 
  34                                  }
  35                                  interBuf[interByte] <<= 2; 
  36                          }
  37                  }
  38          }

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
