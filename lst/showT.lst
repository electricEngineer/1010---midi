C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE SHOWT
OBJECT MODULE PLACED IN .\obj\showT.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE showT.c ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOLS PRI
                    -NT(.\lst\showT.lst) PREPRINT(.\lst\showT.i) OBJECT(.\obj\showT.obj)

line level    source

   1          #include <reg936.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  REG936.H
   3      =1  
   4      =1  Header file for Philips 89LPC936
   5      =1  Copyright (c) 1988-2006 KEIL - An ARM Company
   6      =1  All rights reserved.
   7      =1  V1.1
   8      =1  --------------------------------------------------------------------------*/
   9      =1  
  10      =1  #ifndef __REG936_H__
  11      =1  #define __REG936_H__
  12      =1  
  13      =1  /*  BYTE Registers  */
  14      =1  sfr P0   = 0x80;
  15      =1  sfr P1   = 0x90;
  16      =1  sfr P2   = 0xA0;
  17      =1  sfr P3   = 0xB0;
  18      =1  sfr PSW  = 0xD0;
  19      =1  sfr ACC  = 0xE0;
  20      =1  sfr B    = 0xF0;
  21      =1  sfr SP   = 0x81;
  22      =1  sfr DPL  = 0x82;
  23      =1  sfr DPH  = 0x83;
  24      =1  sfr PCON = 0x87;
  25      =1  sfr TCON = 0x88;
  26      =1  sfr TMOD = 0x89;
  27      =1  sfr TL0  = 0x8A;
  28      =1  sfr TL1  = 0x8B;
  29      =1  sfr TH0  = 0x8C;
  30      =1  sfr TH1  = 0x8D;
  31      =1  sfr IEN0 = 0xA8;
  32      =1  sfr IP0  = 0xB8;
  33      =1  sfr SCON = 0x98;
  34      =1  sfr SBUF = 0x99;
  35      =1  
  36      =1  sfr ADCON0 = 0x8E;
  37      =1  sfr ADCON1 = 0x97;
  38      =1  sfr ADMODA = 0xC0;
  39      =1  sfr ADMODB = 0xA1;
  40      =1  sfr ADINS  = 0xA3;
  41      =1  sfr AD0DAT0= 0xC5;
  42      =1  sfr AD0DAT1= 0xC6;
  43      =1  sfr AD0DAT2= 0xC7;
  44      =1  sfr AD0DAT3= 0xF4;
  45      =1  sfr AD1DAT0= 0xD5;
  46      =1  sfr AD1DAT1= 0xD6;
  47      =1  sfr AD1DAT2= 0xD7;
  48      =1  sfr AD1DAT3= 0xF5;
  49      =1  sfr AD0BH  = 0xBB;
  50      =1  sfr AD0BL  = 0xA6;
  51      =1  sfr AD1BH  = 0xC4;
  52      =1  sfr AD1BL  = 0xBC;
  53      =1  sfr AUXR1  = 0xA2;
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 2   

  54      =1  sfr SADDR  = 0xA9;
  55      =1  sfr SADEN  = 0xB9;
  56      =1  sfr TL2    = 0xCC;
  57      =1  sfr TH2    = 0xCD;
  58      =1  sfr BRGR0  = 0xBE;
  59      =1  sfr BRGR1  = 0xBF;
  60      =1  sfr BRGCON = 0xBD;
  61      =1  sfr CCCRA  = 0xEA;
  62      =1  sfr CCCRB  = 0xEB;
  63      =1  sfr CCCRC  = 0xEC;
  64      =1  sfr CCCRD  = 0xED;
  65      =1  sfr CMP1   = 0xAC;
  66      =1  sfr CMP2   = 0xAD;
  67      =1  sfr DEECON = 0xF1;
  68      =1  sfr DEEDAT = 0xF2;
  69      =1  sfr DEEADR = 0xF3;
  70      =1  sfr DIVM   = 0x95;
  71      =1  sfr I2ADR  = 0xDB;
  72      =1  sfr I2CON  = 0xD8;
  73      =1  sfr I2DAT  = 0xDA;
  74      =1  sfr I2SCLH = 0xDD;
  75      =1  sfr I2SCLL = 0xDC;
  76      =1  sfr I2STAT = 0xD9;
  77      =1  sfr ICRAH  = 0xAB;
  78      =1  sfr ICRAL  = 0xAA;
  79      =1  sfr ICRBH  = 0xAF;
  80      =1  sfr ICRBL  = 0xAE;
  81      =1  sfr IEN1   = 0xE8;
  82      =1  sfr IP1    = 0xF8;
  83      =1  sfr IP1H   = 0xF7;
  84      =1  sfr KBCON  = 0x94;
  85      =1  sfr KBMASK = 0x86;
  86      =1  sfr KBPATN = 0x93;
  87      =1  sfr OCRAH  = 0xEF;
  88      =1  sfr OCRAL  = 0xEE;
  89      =1  sfr OCRBH  = 0xFB;
  90      =1  sfr OCRBL  = 0xFA;
  91      =1  sfr OCRCH  = 0xFD;
  92      =1  sfr OCRCL  = 0xFC;
  93      =1  sfr OCRDH  = 0xFF;
  94      =1  sfr OCRDL  = 0xFE;
  95      =1  sfr P0M1   = 0x84;
  96      =1  sfr P0M2   = 0x85;
  97      =1  sfr P1M1   = 0x91;
  98      =1  sfr P1M2   = 0x92;
  99      =1  sfr P2M1   = 0xA4;
 100      =1  sfr P2M2   = 0xA5;
 101      =1  sfr P3M1   = 0xB1;
 102      =1  sfr P3M2   = 0xB2;
 103      =1  sfr PCONA  = 0xB5;
 104      =1  sfr PT0AD  = 0xF6;
 105      =1  sfr RSTSRC = 0xDF;
 106      =1  sfr RTCCON = 0xD1;
 107      =1  sfr RTCH   = 0xD2;
 108      =1  sfr RTCL   = 0xD3;
 109      =1  sfr SSTAT  = 0xBA;
 110      =1  sfr SPCTL  = 0xE2;
 111      =1  sfr SPSTAT = 0xE1;
 112      =1  sfr SPDAT  = 0xE3;
 113      =1  sfr TAMOD  = 0x8F;
 114      =1  sfr TCR20  = 0xC8;
 115      =1  sfr TCR21  = 0xF9;
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 3   

 116      =1  sfr TICR2  = 0xC9;
 117      =1  sfr TIFR2  = 0xE9;
 118      =1  sfr TISE2  = 0xDE;
 119      =1  sfr TOR2H  = 0xCF;
 120      =1  sfr TOR2L  = 0xCE;
 121      =1  sfr TPCR2H = 0xCB;
 122      =1  sfr TPCR2L = 0xCA;
 123      =1  sfr TRIM   = 0x96;
 124      =1  sfr WDCON  = 0xA7;
 125      =1  sfr WDL    = 0xC1;
 126      =1  sfr WFEED1 = 0xC2;
 127      =1  sfr WFEED2 = 0xC3;
 128      =1  sfr IP0H   = 0xB7;
 129      =1  
 130      =1  /*  BIT Registers  */
 131      =1  /*  PSW   */
 132      =1  sbit CY   = PSW^7;
 133      =1  sbit AC   = PSW^6;
 134      =1  sbit F0   = PSW^5;
 135      =1  sbit RS1  = PSW^4;
 136      =1  sbit RS0  = PSW^3;
 137      =1  sbit OV   = PSW^2;
 138      =1  sbit F1   = PSW^1;
 139      =1  sbit P    = PSW^0;
 140      =1  
 141      =1  /*  TCON  */
 142      =1  sbit TF1  = TCON^7;
 143      =1  sbit TR1  = TCON^6;
 144      =1  sbit TF0  = TCON^5;
 145      =1  sbit TR0  = TCON^4;
 146      =1  sbit IE1  = TCON^3;
 147      =1  sbit IT1  = TCON^2;
 148      =1  sbit IE0  = TCON^1;
 149      =1  sbit IT0  = TCON^0;
 150      =1  
 151      =1  /*  IEN0   */
 152      =1  sbit EA   = IEN0^7;
 153      =1  sbit EWDRT = IEN0^6;
 154      =1  sbit EBO   = IEN0^5;
 155      =1  sbit ES   = IEN0^4; // alternatively "ESR"
 156      =1  sbit ESR  = IEN0^4;
 157      =1  sbit ET1  = IEN0^3;
 158      =1  sbit EX1  = IEN0^2;
 159      =1  sbit ET0  = IEN0^1;
 160      =1  sbit EX0  = IEN0^0;
 161      =1  
 162      =1  /*  IEN1   */
 163      =1  sbit EAD  = IEN1^7; // alternatively "EIEE" 
 164      =1  sbit EIEE = IEN1^7;
 165      =1  sbit EST  = IEN1^6;
 166      =1  sbit ECCU = IEN1^4;
 167      =1  sbit ESPI = IEN1^3;
 168      =1  sbit EC   = IEN1^2;
 169      =1  sbit EKBI = IEN1^1;
 170      =1  sbit EI2C = IEN1^0;
 171      =1  
 172      =1  /*  IP0   */ 
 173      =1  sbit PWDRT = IP0^6;
 174      =1  sbit PB0   = IP0^5;
 175      =1  sbit PS    = IP0^4; // alternatively "PSR"
 176      =1  sbit PSR   = IP0^4;
 177      =1  sbit PT1   = IP0^3;
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 4   

 178      =1  sbit PX1   = IP0^2;
 179      =1  sbit PT0   = IP0^1;
 180      =1  sbit PX0   = IP0^0;
 181      =1  
 182      =1  /*  IP1   */
 183      =1  sbit PAD  = IP1^7; // alternatively "PIEE" 
 184      =1  sbit PIEE = IP1^7;
 185      =1  sbit PST  = IP1^6;
 186      =1  sbit PCCU = IP1^4;
 187      =1  sbit PSPI = IP1^3;
 188      =1  sbit PC_  = IP1^2;
 189      =1  sbit PKBI = IP1^1;
 190      =1  sbit PI2C = IP1^0;
 191      =1  
 192      =1  /*  SCON  */
 193      =1  sbit SM0  = SCON^7; // alternatively "FE"
 194      =1  sbit FE   = SCON^7;
 195      =1  sbit SM1  = SCON^6;
 196      =1  sbit SM2  = SCON^5;
 197      =1  sbit REN  = SCON^4;
 198      =1  sbit TB8  = SCON^3;
 199      =1  sbit RB8  = SCON^2;
 200      =1  sbit TI   = SCON^1;
 201      =1  sbit RI   = SCON^0;
 202      =1  
 203      =1  /*  I2CON  */
 204      =1  sbit I2EN  = I2CON^6;
 205      =1  sbit STA   = I2CON^5;
 206      =1  sbit STO   = I2CON^4;
 207      =1  sbit SI    = I2CON^3;
 208      =1  sbit AA    = I2CON^2;
 209      =1  sbit CRSEL = I2CON^0;
 210      =1  
 211      =1  /*  P0  */
 212      =1  sbit KB7 = P0^7; // alternatively "T1"
 213      =1  sbit T1 = P0^7;
 214      =1  sbit KB6 = P0^6; // alternatively "CMP1"
 215      =1  //sbit CMP1 = P0^6;
 216      =1  sbit KB5 = P0^5;
 217      =1  sbit KB4 = P0^4;
 218      =1  sbit KB3 = P0^3;
 219      =1  sbit KB2 = P0^2;
 220      =1  sbit KB1 = P0^1;
 221      =1  sbit KB0 = P0^0; // alternatively "CMP2"
 222      =1  //sbit CMP2 = P0^0;
 223      =1  
 224      =1  /*  P1  */
 225      =1  sbit OCC     = P1^7;
 226      =1  sbit OCB     = P1^6;
 227      =1  sbit RST     = P1^5;
 228      =1  sbit INT1    = P1^4;
 229      =1  sbit INT0    = P1^3; // alternatively "SDA"
 230      =1  sbit SDA     = P1^3;
 231      =1  sbit T0      = P1^2; // alternatively "SCL"
 232      =1  sbit SCL     = P1^2;
 233      =1  sbit RxD     = P1^1;
 234      =1  sbit TxD     = P1^0;
 235      =1  
 236      =1  /*  P2  */
 237      =1  sbit ICA     = P2^7;
 238      =1  sbit OCA     = P2^6;
 239      =1  sbit SPICLK  = P2^5;
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 5   

 240      =1  sbit SS      = P2^4;
 241      =1  sbit MISO    = P2^3;
 242      =1  sbit MOSI    = P2^2;
 243      =1  sbit OCD     = P2^1;
 244      =1  sbit ICB     = P2^0;
 245      =1  
 246      =1  /*  P3  */
 247      =1  sbit XTAL1= P3^1;
 248      =1  sbit XTAL2= P3^0;
 249      =1  
 250      =1  /* TCR20 */
 251      =1  sbit PLLEN = TCR20^7;
 252      =1  sbit HLTRN = TCR20^6;
 253      =1  sbit HLTEN = TCR20^5;
 254      =1  sbit ALTCD = TCR20^4;
 255      =1  sbit ALTAB = TCR20^3;
 256      =1  sbit TDIR2 = TCR20^2;
 257      =1  sbit TMOD21= TCR20^1;
 258      =1  sbit TMOD20= TCR20^0;
 259      =1  
 260      =1  /* ADMODA */
 261      =1  sbit BNDI1  = ADMODA^7;
 262      =1  sbit BURST1 = ADMODA^6;
 263      =1  sbit SCC1   = ADMODA^5;
 264      =1  sbit SCAN1  = ADMODA^4;
 265      =1  sbit BNDI0  = ADMODA^3;
 266      =1  sbit BURST0 = ADMODA^2;
 267      =1  sbit SCC0   = ADMODA^1;
 268      =1  sbit SCAN0  = ADMODA^0;
 269      =1  
 270      =1  #endif
 271      =1  
   2          #include "iTrip.h"
   1      =1  /*
   2      =1  itrip HEADERZ v1e-9
   3      =1  */
   4      =1  
   5      =1  #ifndef _ITRIP_H
   6      =1  #define _ITRIP_H 
   7      =1          typedef unsigned char byte;
   8      =1          typedef unsigned int word;
   9      =1  /****************************PROTOS*********************/
  10      =1          void setup ();  //name and turn on
  11      =1          void delay (word cnt);
  12      =1          void txProg ();
  13      =1          void txStero ();
  14      =1          void txMono ();
  15      =1          void setFreq (word freq);
  16      =1          void incFreq ();
  17      =1          void decFreq ();
  18      =1          void setChan (byte numChan);
  19      =1  
  20      =1  /******************PIN NAMES****************************/
  21      =1          volatile word bdata txState;
  22      =1  //      sbit monoStereo = txState^12;
  23      =1  //      sbit phaseMode0 = txState^11;
  24      =1  //      sbit phaseMode1 = txState^10;
  25      =1  //      sbit test0 = txState^9;
  26      =1  //      sbit test1 = txState^8;
  27      =1          sbit stereo = txState^3;
  28      =1          sbit phaseMode0 = txState^4;
  29      =1          sbit phaseMode1 = txState^5;
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 6   

  30      =1          sbit test0 = txState^6;
  31      =1          sbit test1 = txState^7;
  32      =1          
  33      =1          sbit txVcc = P2^7;
  34      =1          sbit txData = P2^2;
  35      =1          sbit txClk = P2^3;
  36      =1          sbit LED = P2^5;
  37      =1          sbit CE = P2^4;
  38      =1          sbit midButt = P0^0;
  39      =1          sbit hiButt = P0^1;
  40      =1          sbit loButt = P0^2;
  41      =1          sbit audioL = P0^3;
  42      =1  #endif
   3          #include "showT.h"
   1      =1  #ifndef _SHOW_T_
   2      =1  #define _SHOW_T_
   3      =1          word i = 0;
   4      =1          byte j = 0;
   5      =1          void show();
   6      =1  #endif
   4          
   5                  void show() {
   6   1                      if (j == 0) {
   7   2                              for(i = 0; i < 380; ++i) {
   8   3                                      if (i < 40) {
   9   4                                              audioL = 1;
  10   4                                              delay(1.5e3+ (i%32));
  11   4                                              audioL = 0;
  12   4                                              delay(1.5e3+ (i%32));
  13   4                                      } else if (     i < 120) {
  14   4                                              audioL = 1;
  15   4                                              delay(1e3+ (i%32));
  16   4                                              audioL = 0;
  17   4                                              delay(1e3+ (i));
  18   4                                      } else if ( i < 200) {
  19   4                                              audioL = 1;
  20   4                                              delay(2e3+ (i%128));
  21   4                                              audioL = 0;
  22   4                                              delay(2e3+ (i%64));
  23   4                                      } else if (i < 250) {
  24   4                                              audioL = 1;
  25   4                                              delay(2e3);
  26   4                                              audioL = 0;
  27   4                                              delay(2e3);
  28   4                                      } else if (i < 290) {
  29   4                                              audioL = 1;
  30   4                                              delay(4e3+ i);
  31   4                                              audioL = 0;
  32   4                                              delay(4e3);
  33   4                                      } else if (i < 330) {
  34   4                                              audioL = 1;
  35   4                                              delay(4e3);
  36   4                                              audioL = 0;
  37   4                                              delay(4e3);
  38   4                                      } else if (i < 360) {
  39   4                                              audioL = 1;
  40   4                                              delay(6e3+ i);
  41   4                                              audioL = 0;
  42   4                                              delay(8e3);
  43   4                                      } else {
  44   4                                              audioL = 1;
  45   4                                              delay(2e3+ (i%128));
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 7   

  46   4                                              audioL = 0;
  47   4                                              delay(2e3+ (i%64));
  48   4                                      }
  49   3                                      if (midButt == 0) {
  50   4                                              j = 1;
  51   4                                      }
  52   3                                      if (loButt == 0) {
  53   4                                              j = 2;
  54   4                                      }
  55   3                                      if (hiButt == 0) {
  56   4                                              j = 0;
  57   4                                      }
  58   3                              }
  59   2                      } else if (j == 1) {
  60   2                              for(i = 0; i < 380; ++i) {
  61   3                                      audioL = 1;
  62   3                                      delay(2e3);
  63   3                                      setFreq(700 + i);
  64   3                                      audioL = 0;
  65   3                                      delay(2e3);
  66   3                                      if (midButt == 0) {
  67   4                                              j = 1;
  68   4                                      }
  69   3                                      if (loButt == 0) {
  70   4                                              j = 2;
  71   4                                      }
  72   3                                      if (hiButt == 0) {
  73   4                                              j = 0;
  74   4                                      }
  75   3                              }
  76   2                      } else if (j == 2) {
  77   2                              setFreq(900);
  78   2                              delay(1.5e3);
  79   2                              setFreq(902);
  80   2                              delay(1.5e3);
  81   2                              if (midButt == 0) {
  82   3                                      j = 1;
  83   3                              }
  84   2                              if (loButt == 0) {
  85   3                                      j = 2;
  86   3                              }
  87   2                              if (hiButt == 0) {
  88   3                                      j = 0;
  89   3                              }
  90   2                      }
  91   1                      for(i = 0; i < 380; ++i) {
  92   2                              audioL = 1;
  93   2                              delay(2e3 - 2*i);
  94   2                              audioL = 0;
  95   2                              delay(2e3 + (i%64));
  96   2                              if (midButt == 0) {
  97   3                                      j = 1;
  98   3                              }
  99   2                              if (loButt == 0) {
 100   3                                      j = 2;
 101   3                              }
 102   2                              if (hiButt == 0) {
 103   3                                      j = 0;
 104   3                              }
 105   2                              setFreq(800 + (i%128));
 106   2                      }
 107   1              }                               //showtime
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION show (BEGIN)
                                           ; SOURCE LINE # 5
                                           ; SOURCE LINE # 6
0000 E500        R     MOV     A,j
0002 6002              JZ      $ + 4H
0004 0100        R     AJMP    ?C0001
                                           ; SOURCE LINE # 7
0006 F500        R     MOV     i,A
0008 F500        R     MOV     i+01H,A
000A         ?C0002:
                                           ; SOURCE LINE # 8
000A C3                CLR     C
000B E500        R     MOV     A,i+01H
000D 9428              SUBB    A,#028H
000F E500        R     MOV     A,i
0011 9400              SUBB    A,#00H
0013 5033              JNC     ?C0005
                                           ; SOURCE LINE # 9
0015 D283              SETB    audioL
                                           ; SOURCE LINE # 10
0017 7C00              MOV     R4,#00H
0019 E500        R     MOV     A,i+01H
001B 541F              ANL     A,#01FH
001D FD                MOV     R5,A
001E E4                CLR     A
001F 120000      E     LCALL   ?C?FCASTI
0022 7B00              MOV     R3,#00H
0024 7A80              MOV     R2,#080H
0026 79BB              MOV     R1,#0BBH
0028 7844              MOV     R0,#044H
002A 120000      E     LCALL   ?C?FPADD
002D 120000      E     LCALL   ?C?CASTF
0030 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 11
0033 C283              CLR     audioL
                                           ; SOURCE LINE # 12
0035 7C00              MOV     R4,#00H
0037 E500        R     MOV     A,i+01H
0039 541F              ANL     A,#01FH
003B FD                MOV     R5,A
003C E4                CLR     A
003D 120000      E     LCALL   ?C?FCASTI
0040 7B00              MOV     R3,#00H
0042 7A80              MOV     R2,#080H
0044 79BB              MOV     R1,#0BBH
                                           ; SOURCE LINE # 13
0046 0100        R     AJMP    ?C0047
0048         ?C0005:
0048 C3                CLR     C
0049 E500        R     MOV     A,i+01H
004B 9478              SUBB    A,#078H
004D E500        R     MOV     A,i
004F 9400              SUBB    A,#00H
0051 502E              JNC     ?C0007
                                           ; SOURCE LINE # 14
0053 D283              SETB    audioL
                                           ; SOURCE LINE # 15
0055 7C00              MOV     R4,#00H
0057 E500        R     MOV     A,i+01H
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 9   

0059 541F              ANL     A,#01FH
005B FD                MOV     R5,A
005C E4                CLR     A
005D 120000      E     LCALL   ?C?FCASTI
0060 E4                CLR     A
0061 FB                MOV     R3,A
0062 FA                MOV     R2,A
0063 797A              MOV     R1,#07AH
0065 7844              MOV     R0,#044H
0067 120000      E     LCALL   ?C?FPADD
006A 120000      E     LCALL   ?C?CASTF
006D 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 16
0070 C283              CLR     audioL
                                           ; SOURCE LINE # 17
0072 AC00        R     MOV     R4,i
0074 AD00        R     MOV     R5,i+01H
0076 E4                CLR     A
0077 120000      E     LCALL   ?C?FCASTI
007A E4                CLR     A
007B FB                MOV     R3,A
007C FA                MOV     R2,A
007D 797A              MOV     R1,#07AH
007F         ?C0045:
                                           ; SOURCE LINE # 18
007F 0100        R     AJMP    ?C0047
0081         ?C0007:
0081 C3                CLR     C
0082 E500        R     MOV     A,i+01H
0084 94C8              SUBB    A,#0C8H
0086 E500        R     MOV     A,i
0088 9400              SUBB    A,#00H
008A 5031              JNC     ?C0009
                                           ; SOURCE LINE # 19
008C D283              SETB    audioL
                                           ; SOURCE LINE # 20
008E 7C00              MOV     R4,#00H
0090 E500        R     MOV     A,i+01H
0092 547F              ANL     A,#07FH
0094 FD                MOV     R5,A
0095 E4                CLR     A
0096 120000      E     LCALL   ?C?FCASTI
0099 E4                CLR     A
009A FB                MOV     R3,A
009B FA                MOV     R2,A
009C 79FA              MOV     R1,#0FAH
009E 7844              MOV     R0,#044H
00A0 120000      E     LCALL   ?C?FPADD
00A3 120000      E     LCALL   ?C?CASTF
00A6 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 21
00A9 C283              CLR     audioL
                                           ; SOURCE LINE # 22
00AB 7C00              MOV     R4,#00H
00AD E500        R     MOV     A,i+01H
00AF 543F              ANL     A,#03FH
00B1 FD                MOV     R5,A
00B2 E4                CLR     A
00B3 120000      E     LCALL   ?C?FCASTI
00B6 E4                CLR     A
00B7 FB                MOV     R3,A
00B8 FA                MOV     R2,A
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 10  

00B9 79FA              MOV     R1,#0FAH
00BB         ?C0046:
                                           ; SOURCE LINE # 23
00BB 0100        R     AJMP    ?C0047
00BD         ?C0009:
00BD C3                CLR     C
00BE E500        R     MOV     A,i+01H
00C0 94FA              SUBB    A,#0FAH
00C2 E500        R     MOV     A,i
00C4 9400              SUBB    A,#00H
00C6 5011              JNC     ?C0011
                                           ; SOURCE LINE # 24
00C8 D283              SETB    audioL
                                           ; SOURCE LINE # 25
00CA 7FD0              MOV     R7,#0D0H
00CC 7E07              MOV     R6,#07H
00CE 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 26
00D1 C283              CLR     audioL
                                           ; SOURCE LINE # 27
00D3 7FD0              MOV     R7,#0D0H
00D5 7E07              MOV     R6,#07H
                                           ; SOURCE LINE # 28
00D7 0100        R     AJMP    ?C0051
00D9         ?C0011:
00D9 C3                CLR     C
00DA E500        R     MOV     A,i+01H
00DC 9422              SUBB    A,#022H
00DE E500        R     MOV     A,i
00E0 9401              SUBB    A,#01H
00E2 5022              JNC     ?C0013
                                           ; SOURCE LINE # 29
00E4 D283              SETB    audioL
                                           ; SOURCE LINE # 30
00E6 AC00        R     MOV     R4,i
00E8 AD00        R     MOV     R5,i+01H
00EA E4                CLR     A
00EB 120000      E     LCALL   ?C?FCASTI
00EE E4                CLR     A
00EF FB                MOV     R3,A
00F0 FA                MOV     R2,A
00F1 797A              MOV     R1,#07AH
00F3 7845              MOV     R0,#045H
00F5 120000      E     LCALL   ?C?FPADD
00F8 120000      E     LCALL   ?C?CASTF
00FB 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 31
00FE C283              CLR     audioL
                                           ; SOURCE LINE # 32
0100 7FA0              MOV     R7,#0A0H
0102 7E0F              MOV     R6,#0FH
0104         ?C0048:
                                           ; SOURCE LINE # 33
0104 0100        R     AJMP    ?C0051
0106         ?C0013:
0106 C3                CLR     C
0107 E500        R     MOV     A,i+01H
0109 944A              SUBB    A,#04AH
010B E500        R     MOV     A,i
010D 9401              SUBB    A,#01H
010F 5011              JNC     ?C0015
                                           ; SOURCE LINE # 34
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 11  

0111 D283              SETB    audioL
                                           ; SOURCE LINE # 35
0113 7FA0              MOV     R7,#0A0H
0115 7E0F              MOV     R6,#0FH
0117 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 36
011A C283              CLR     audioL
                                           ; SOURCE LINE # 37
011C 7FA0              MOV     R7,#0A0H
011E 7E0F              MOV     R6,#0FH
0120         ?C0049:
                                           ; SOURCE LINE # 38
0120 8065              SJMP    ?C0051
0122         ?C0015:
0122 C3                CLR     C
0123 E500        R     MOV     A,i+01H
0125 9468              SUBB    A,#068H
0127 E500        R     MOV     A,i
0129 9401              SUBB    A,#01H
012B 5023              JNC     ?C0017
                                           ; SOURCE LINE # 39
012D D283              SETB    audioL
                                           ; SOURCE LINE # 40
012F AC00        R     MOV     R4,i
0131 AD00        R     MOV     R5,i+01H
0133 E4                CLR     A
0134 120000      E     LCALL   ?C?FCASTI
0137 7B00              MOV     R3,#00H
0139 7A80              MOV     R2,#080H
013B 79BB              MOV     R1,#0BBH
013D 7845              MOV     R0,#045H
013F 120000      E     LCALL   ?C?FPADD
0142 120000      E     LCALL   ?C?CASTF
0145 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 41
0148 C283              CLR     audioL
                                           ; SOURCE LINE # 42
014A 7F40              MOV     R7,#040H
014C 7E1F              MOV     R6,#01FH
014E         ?C0050:
                                           ; SOURCE LINE # 43
014E 8037              SJMP    ?C0051
0150         ?C0017:
                                           ; SOURCE LINE # 44
0150 D283              SETB    audioL
                                           ; SOURCE LINE # 45
0152 7C00              MOV     R4,#00H
0154 E500        R     MOV     A,i+01H
0156 547F              ANL     A,#07FH
0158 FD                MOV     R5,A
0159 E4                CLR     A
015A 120000      E     LCALL   ?C?FCASTI
015D E4                CLR     A
015E FB                MOV     R3,A
015F FA                MOV     R2,A
0160 79FA              MOV     R1,#0FAH
0162 7844              MOV     R0,#044H
0164 120000      E     LCALL   ?C?FPADD
0167 120000      E     LCALL   ?C?CASTF
016A 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 46
016D C283              CLR     audioL
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 12  

                                           ; SOURCE LINE # 47
016F 7C00              MOV     R4,#00H
0171 E500        R     MOV     A,i+01H
0173 543F              ANL     A,#03FH
0175 FD                MOV     R5,A
0176 E4                CLR     A
0177 120000      E     LCALL   ?C?FCASTI
017A E4                CLR     A
017B FB                MOV     R3,A
017C FA                MOV     R2,A
017D 79FA              MOV     R1,#0FAH
017F         ?C0047:
017F 7844              MOV     R0,#044H
0181 120000      E     LCALL   ?C?FPADD
0184 120000      E     LCALL   ?C?CASTF
0187         ?C0051:
0187 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 48
018A         ?C0006:
                                           ; SOURCE LINE # 49
018A 208003            JB      midButt,?C0019
                                           ; SOURCE LINE # 50
018D 750001      R     MOV     j,#01H
                                           ; SOURCE LINE # 51
0190         ?C0019:
                                           ; SOURCE LINE # 52
0190 208203            JB      loButt,?C0020
                                           ; SOURCE LINE # 53
0193 750002      R     MOV     j,#02H
                                           ; SOURCE LINE # 54
0196         ?C0020:
                                           ; SOURCE LINE # 55
0196 208103            JB      hiButt,?C0004
                                           ; SOURCE LINE # 56
0199 E4                CLR     A
019A F500        R     MOV     j,A
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
019C         ?C0004:
019C 0500        R     INC     i+01H
019E E500        R     MOV     A,i+01H
01A0 7002              JNZ     ?C0042
01A2 0500        R     INC     i
01A4         ?C0042:
01A4 C3                CLR     C
01A5 947C              SUBB    A,#07CH
01A7 E500        R     MOV     A,i
01A9 9401              SUBB    A,#01H
01AB 5002              JNC     $ + 4H
01AD 0100        R     AJMP    ?C0002
01AF 0100        R     AJMP    ?C0022
                                           ; SOURCE LINE # 59
01B1         ?C0001:
01B1 E500        R     MOV     A,j
01B3 6401              XRL     A,#01H
01B5 7048              JNZ     ?C0023
                                           ; SOURCE LINE # 60
01B7 F500        R     MOV     i,A
01B9 F500        R     MOV     i+01H,A
01BB         ?C0024:
                                           ; SOURCE LINE # 61
01BB D283              SETB    audioL
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 13  

                                           ; SOURCE LINE # 62
01BD 7FD0              MOV     R7,#0D0H
01BF 7E07              MOV     R6,#07H
01C1 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 63
01C4 E500        R     MOV     A,i+01H
01C6 24BC              ADD     A,#0BCH
01C8 FF                MOV     R7,A
01C9 E500        R     MOV     A,i
01CB 3402              ADDC    A,#02H
01CD FE                MOV     R6,A
01CE 120000      E     LCALL   _setFreq
                                           ; SOURCE LINE # 64
01D1 C283              CLR     audioL
                                           ; SOURCE LINE # 65
01D3 7FD0              MOV     R7,#0D0H
01D5 7E07              MOV     R6,#07H
01D7 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 66
01DA 208003            JB      midButt,?C0027
                                           ; SOURCE LINE # 67
01DD 750001      R     MOV     j,#01H
                                           ; SOURCE LINE # 68
01E0         ?C0027:
                                           ; SOURCE LINE # 69
01E0 208203            JB      loButt,?C0028
                                           ; SOURCE LINE # 70
01E3 750002      R     MOV     j,#02H
                                           ; SOURCE LINE # 71
01E6         ?C0028:
                                           ; SOURCE LINE # 72
01E6 208103            JB      hiButt,?C0026
                                           ; SOURCE LINE # 73
01E9 E4                CLR     A
01EA F500        R     MOV     j,A
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
01EC         ?C0026:
01EC 0500        R     INC     i+01H
01EE E500        R     MOV     A,i+01H
01F0 7002              JNZ     ?C0043
01F2 0500        R     INC     i
01F4         ?C0043:
01F4 C3                CLR     C
01F5 947C              SUBB    A,#07CH
01F7 E500        R     MOV     A,i
01F9 9401              SUBB    A,#01H
01FB 40BE              JC      ?C0024
01FD 8034              SJMP    ?C0022
                                           ; SOURCE LINE # 76
01FF         ?C0023:
01FF E500        R     MOV     A,j
0201 6402              XRL     A,#02H
0203 702E              JNZ     ?C0022
                                           ; SOURCE LINE # 77
0205 7F84              MOV     R7,#084H
0207 7E03              MOV     R6,#03H
0209 120000      E     LCALL   _setFreq
                                           ; SOURCE LINE # 78
020C 7FDC              MOV     R7,#0DCH
020E 7E05              MOV     R6,#05H
0210 120000      E     LCALL   _delay
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 14  

                                           ; SOURCE LINE # 79
0213 7F86              MOV     R7,#086H
0215 7E03              MOV     R6,#03H
0217 120000      E     LCALL   _setFreq
                                           ; SOURCE LINE # 80
021A 7FDC              MOV     R7,#0DCH
021C 7E05              MOV     R6,#05H
021E 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 81
0221 208003            JB      midButt,?C0032
                                           ; SOURCE LINE # 82
0224 750001      R     MOV     j,#01H
                                           ; SOURCE LINE # 83
0227         ?C0032:
                                           ; SOURCE LINE # 84
0227 208203            JB      loButt,?C0033
                                           ; SOURCE LINE # 85
022A 750002      R     MOV     j,#02H
                                           ; SOURCE LINE # 86
022D         ?C0033:
                                           ; SOURCE LINE # 87
022D 208103            JB      hiButt,?C0022
                                           ; SOURCE LINE # 88
0230 E4                CLR     A
0231 F500        R     MOV     j,A
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
0233         ?C0022:
                                           ; SOURCE LINE # 91
0233 E4                CLR     A
0234 F500        R     MOV     i,A
0236 F500        R     MOV     i+01H,A
0238         ?C0035:
                                           ; SOURCE LINE # 92
0238 D283              SETB    audioL
                                           ; SOURCE LINE # 93
023A E500        R     MOV     A,i+01H
023C 25E0              ADD     A,ACC
023E FD                MOV     R5,A
023F E500        R     MOV     A,i
0241 33                RLC     A
0242 FC                MOV     R4,A
0243 E4                CLR     A
0244 120000      E     LCALL   ?C?FCASTI
0247 A804              MOV     R0,AR4
0249 A905              MOV     R1,AR5
024B AA06              MOV     R2,AR6
024D AB07              MOV     R3,AR7
024F E4                CLR     A
0250 FF                MOV     R7,A
0251 FE                MOV     R6,A
0252 7DFA              MOV     R5,#0FAH
0254 7C44              MOV     R4,#044H
0256 120000      E     LCALL   ?C?FPSUB
0259 120000      E     LCALL   ?C?CASTF
025C 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 94
025F C283              CLR     audioL
                                           ; SOURCE LINE # 95
0261 7C00              MOV     R4,#00H
0263 E500        R     MOV     A,i+01H
0265 543F              ANL     A,#03FH
C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 15  

0267 FD                MOV     R5,A
0268 E4                CLR     A
0269 120000      E     LCALL   ?C?FCASTI
026C E4                CLR     A
026D FB                MOV     R3,A
026E FA                MOV     R2,A
026F 79FA              MOV     R1,#0FAH
0271 7844              MOV     R0,#044H
0273 120000      E     LCALL   ?C?FPADD
0276 120000      E     LCALL   ?C?CASTF
0279 120000      E     LCALL   _delay
                                           ; SOURCE LINE # 96
027C 208003            JB      midButt,?C0038
                                           ; SOURCE LINE # 97
027F 750001      R     MOV     j,#01H
                                           ; SOURCE LINE # 98
0282         ?C0038:
                                           ; SOURCE LINE # 99
0282 208203            JB      loButt,?C0039
                                           ; SOURCE LINE # 100
0285 750002      R     MOV     j,#02H
                                           ; SOURCE LINE # 101
0288         ?C0039:
                                           ; SOURCE LINE # 102
0288 208103            JB      hiButt,?C0040
                                           ; SOURCE LINE # 103
028B E4                CLR     A
028C F500        R     MOV     j,A
                                           ; SOURCE LINE # 104
028E         ?C0040:
                                           ; SOURCE LINE # 105
028E E500        R     MOV     A,i+01H
0290 547F              ANL     A,#07FH
0292 2420              ADD     A,#020H
0294 FF                MOV     R7,A
0295 E4                CLR     A
0296 3403              ADDC    A,#03H
0298 FE                MOV     R6,A
0299 120000      E     LCALL   _setFreq
                                           ; SOURCE LINE # 106
029C 0500        R     INC     i+01H
029E E500        R     MOV     A,i+01H
02A0 7002              JNZ     ?C0044
02A2 0500        R     INC     i
02A4         ?C0044:
02A4 C3                CLR     C
02A5 947C              SUBB    A,#07CH
02A7 E500        R     MOV     A,i
02A9 9401              SUBB    A,#01H
02AB 408B              JC      ?C0035
                                           ; SOURCE LINE # 107
02AD         ?C0041:
02AD 22                RET     
             ; FUNCTION show (END)

C51 COMPILER V8.12   SHOWT                                                                 10/25/2010 15:52:49 PAGE 16  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
IEN0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
IEN1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
_delay . . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
stereo . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0003H  1
ADMODA . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
byte . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
word . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
show . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IP0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
IP1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
phaseMode0 . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0004H  1
TCR20. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
phaseMode1 . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0005H  1
I2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
midButt. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
_setFreq . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
audioL . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0083H  1
i. . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0000H  2
j. . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0002H  1
txState. . . . . . . . . . . . . . . .  PUBLIC   DATA   U_INT    0000H  2
test0. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0006H  1
hiButt . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
test1. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0007H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
loButt . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0082H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    686    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
